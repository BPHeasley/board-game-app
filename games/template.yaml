AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  board-game-app

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.12

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPython:20
  Api:
    TracingEnabled: true

Resources:
  BoardGamesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "title"
          AttributeType: "S"
      KeySchema: # Specifies the primary key. For Board Games, it is the title of the board game
        - AttributeName: "title"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST

  AddBoardGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/api/board_game/add
      Handler: add_board_game.lambda_handler
      Tracing: Active
      Events:
        AddBoardGame:
          Type: Api
          Properties:
            Path: /boardgames
            Method: post
            RestApiId: !Ref BoardGameAPI
      Environment:
        Variables:
          BOARD_GAMES_TABLE: !Ref BoardGamesTable
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref BoardGamesTable

  BoardGameAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      TracingEnabled: true

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:

  AddBoardGameFunctionArn:
    Description: Add Board Game Lambda Function ARN
    Value: !GetAtt AddBoardGameFunction.Arn

  BoardGamesTable:
    Description: "Board Games DynamoDB Table"
    Value: !Ref BoardGamesTable

  APIEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${BoardGameAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod"